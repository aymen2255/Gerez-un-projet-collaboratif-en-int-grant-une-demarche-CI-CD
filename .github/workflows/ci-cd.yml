name: CI CD pipe

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
    
jobs:
  # Job de test backend
  test-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: back

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Build backend with Maven
        run: mvn -B package --file pom.xml
        
      - name: Run tests with Maven
        run: mvn -B test --file pom.xml
        
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

  # Job de test frontend
  test-frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: front

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build Angular Project
        run: npm run build

      - name: Run Tests and Generate Code Coverage Report
        run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
        
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: front-coverage-report
          path: ./front/coverage/bobapp
          overwrite: true
          if-no-files-found: error        
  # Job d'analyse SonarCloud pour le backend
  sonarcloud-analysis-backend:
    runs-on: ubuntu-latest

    needs: test-backend

    defaults:
      run:
        working-directory: back

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=aymen2255_gerez-un-projet-collaboratif-en-int-grant-une-demarche-ci-cd

  # Job d'analyse SonarCloud pour le frontend
  sonarcloud-analysis-frontend:
    runs-on: ubuntu-latest

    needs: test-frontend

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job de déploiement Docker pour le backend
  docker-backend:
    runs-on: ubuntu-latest

    needs: [test-backend, sonarcloud-analysis-backend]

    defaults:
      run:
        working-directory: back

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
            context: ./back
            file: ./back/Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-backend:latest

  # Job de déploiement Docker pour le frontend
  docker-frontend:
    runs-on: ubuntu-latest

    needs: [test-frontend, sonarcloud-analysis-frontend]

    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
            context: ./front
            file: ./front/Dockerfile
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-frontend:latest
