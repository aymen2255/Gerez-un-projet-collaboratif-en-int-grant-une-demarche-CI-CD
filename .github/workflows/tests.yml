name: Tests and Coverage
on:
  push:
    branches:
      - main
jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
      - name: Build backend with Maven
        run: mvn -B package --file pom.xml
        
      - name: Run test with Maven
        run: mvn -B test --file pom.xml
        
      - name: Upload JaCoCo coverage report as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: back/target/site/jacoco
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=aymen2255_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
        
  frontend:  
    name: Frontend Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: front
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Install Angular CLI
        run: npm install -g @angular/cli
        
      - name: Install frontend dependencies
        run: npm install
        
      - name: Build frontend
        run: ng build 
        
      - name: Run frontend test
        run: npm run test:prod
        
      - name: Upload coverage report as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: karma-report
          path: front/coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with : 
          projectBaseDir : front
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front          
